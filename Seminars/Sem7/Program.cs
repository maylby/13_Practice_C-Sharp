// Семинар 7 Двумернные массивы

// **Задача 46:** 
// Задайте двумерный массив размером m×n, 
// заполненный случайными целыми числами.

// m = 3, n = 4.
// 1 4 8 19
// 5 -2 33 -2
// 77 3 8 1


// **Задача 51:** 
// Задайте двумерный массив. Найдите сумму элементов, находящихся на главной диагонали (с индексами (0,0); (1;1) и т.д.

// Например, задан массив:

// 1 4 7 2
// 5 9 2 3
// 8 4 2 4

// Сумма элементов главной диагонали: 1+9+2 = 12


// **Задача 48:** 
// (зал /Илья Канаев/)

// Задайте двумерный массив размера m на n, 
// каждый элемент в массиве находится по формуле: Aₘₙ = m+n. Выведите полученный массив на экран.

// m = 3, n = 4.
// 0 1 2 3
// 1 2 3 4
// 2 3 4 5

// !!! - Система сообщает об ошибке в cs(66,12): не удается преобразовать из "int[*,*]" в "int[]"

void PrintArray(int[] array) // Выводит на экран созданный массив
{
    for (int i = 0; i < array.Length; i++ ) // цикл  повторений до завершения
    {
        System.Console.Write( array[i] + " "); // содержимое массива
    }
    System.Console.WriteLine(); // <- Пустая строка при выводе на экран
}

int[,] Create2DArray(int row, int column)
{
    int [,] array = new int[row, column];
    for (int i= 0; i < row; i++)
    {
        for (int j = 0; j < column; j++)
        {
            array[i,j] = i + j;
        }
    }
    return array;
}

Console.WriteLine("Input number of rows: ");
int rows = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Input number of columns: ");
int columns = Convert.ToInt32(Console.ReadLine());
// Ошибка: Не удается преобразовать из "int[*,*]" в "int[]"
int[,] myArray = Create2DArray(rows, columns); // cs(65,17), при удалении запятой из "int[] myArray"
PrintArray(myArray); // cs(66,12), при наличии запятой в скобках "int[,] myArray" 


// **Задача 49:** 
// Задайте двумерный массив. 
// Найдите элементы, у которых оба индекса чётные, 
// и замените эти элементы на их квадраты.

// Например, изначально массив выглядел вот так:

// 1 4 7 2
// 5 9 2 3
// 8 4 2 4

// Новый массив будет выглядеть вот так:

// 1 4 7 2
// 5 **81** 2 **9**
// 8 4 2 4

